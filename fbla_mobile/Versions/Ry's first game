// App.js
import React, { useState } from 'react';
import {
  View,
  Text,
  TextInput,
  Button,
  ScrollView,
  Image,
  StyleSheet,
  Pressable,
} from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { NavigationContainer } from '@react-navigation/native';
import { createNativeStackNavigator } from '@react-navigation/native-stack';

const Stack = createNativeStackNavigator();

const SignInScreen = ({ navigation }) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');

  const handleSignIn = async () => {
    const storedUsername = await AsyncStorage.getItem('username');
    const storedPassword = await AsyncStorage.getItem('password');
    if (username === storedUsername && password === storedPassword) {
      navigation.replace('Home', { username });
    } else {
      alert('Invalid username or password');
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.centeredTitle}>Sign In</Text>
      <TextInput
        style={styles.input}
        placeholder="Username"
        value={username}
        onChangeText={setUsername}
      />
      <TextInput
        style={styles.input}
        placeholder="Password"
        value={password}
        onChangeText={setPassword}
        secureTextEntry
      />
      <Pressable style={styles.signInButton} onPress={handleSignIn}>
        <Text style={styles.signInButtonText}>Enter</Text>
      </Pressable>
      <Pressable
        style={styles.signUpButton}
        onPress={() => navigation.navigate('SignUp')}>
        <Text style={styles.signUpButtonText}>Sign Up </Text>
      </Pressable>
    </View>
  );
};

const HomeScreen = ({ navigation, route }) => {
  const { username } = route.params;

  const handleSignOut = () => {
    navigation.replace('SignIn');
  };

  const eras = [
    {
      title: 'Mesopotamia',
      image:
        'https://img.freepik.com/premium-photo/mesopotamia-civilization_804007-582.jpg?w=2000',
      description: 'Mesopotamia is considered the cradle of civilization.',
    },
    {
      title: 'Ancient Egypt',
      image:
        'https://www.gulla.net/contentassets/9fff228c87f74c33896de28dfd325e6d/pyramids.png',
      description: 'Ancient Egypt is known for its pyramids and pharaohs.',
    },
    {
      title: 'Indus Valley Civilization',
      image: 'https://wallpaperaccess.com/full/8748678.jpg',
      description:
        'The Indus Valley Civilization was one of the earliest urban cultures.',
    },
    {
      title: 'Xia Dynasty',
      image: 'https://www.worldhistory.org/img/c/p/1200x627/4375.jpg',
      description:
        'The Xia Dynasty is the first dynasty in traditional Chinese history.',
    },
    {
      title: 'Minoan',
      image:
        'https://th.bing.com/th/id/R.c96a8465febe8e1d7d7ebb8f24bfe763?rik=tVC3ra%2fIqJ48nw&pid=ImgRaw&r=0',
      description: 'The Minoan civilization flourished on the island of Crete.',
    },
  ];

  return (
    <ScrollView style={styles.detailsContainer}>
      <View style={styles.signOutButtonContainer}>
        <Pressable style={styles.signOutButton} onPress={handleSignOut}>
          <Text style={styles.signOutButtonText}>Sign Out</Text>
        </Pressable>
      </View>
      <Text style={styles.welcomeMessage}>Hello, {username}!</Text>
      <Text style={styles.historyTitle}>History Timeline</Text>
      {eras.map((era, index) => (
        <View key={index} style={styles.timelineItem}>
          <Image source={{ uri: era.image }} style={styles.image} />
          <Pressable
            style={styles.erabutton}
            onPress={() => navigation.navigate('Details', { era })}>
            <Text style={styles.erabuttontext} title={era.title}>
              {era.title}
            </Text>
          </Pressable>
        </View>
      ))}
    </ScrollView>
  );
};

const SignUpScreen = ({ navigation }) => {
  const [newUsername, setNewUsername] = useState('');
  const [newPassword, setNewPassword] = useState('');

  const handleSignUp = async () => {
    if (newUsername && newPassword) {
      await AsyncStorage.setItem('username', newUsername);
      await AsyncStorage.setItem('password', newPassword);
      alert('Account created successfully!');
      navigation.goBack();
    } else {
      alert('Please fill in both fields');
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.centeredTitle}>Sign Up</Text>
      <TextInput
        style={styles.input}
        placeholder="New Username"
        value={newUsername}
        onChangeText={setNewUsername}
      />
      <TextInput
        style={styles.input}
        placeholder="New Password"
        value={newPassword}
        onChangeText={setNewPassword}
        secureTextEntry
      />
      <Pressable style={styles.signInButton} onPress={handleSignUp}>
        <Text style={styles.signInButtonText}>Create Account</Text>
      </Pressable>
    </View>
  );
};

const DetailsScreen = ({ route, navigation }) => {
  const { era } = route.params;

  return (
    <ScrollView style={styles.detailsContainer}>
      <Pressable onPress={() => navigation.goBack()} style={styles.backButton}>
        <Text style={styles.backButtonText}>Back</Text>
      </Pressable>
      <Text style={styles.modalTitle}>{era.title}</Text>
      <Image source={{ uri: era.image }} style={styles.modalImage} />
      <Text style={styles.modalDescription}>{era.description}</Text>
    </ScrollView>
  );
};

const App = () => {
  return (
    <NavigationContainer>
      <Stack.Navigator>
        <Stack.Screen
          name="SignIn"
          component={SignInScreen}
          options={{ headerShown: false }}
        />
        <Stack.Screen
          name="SignUp"
          component={SignUpScreen}
          options={{ headerShown: false }}
        />
        <Stack.Screen
          name="Home"
          component={HomeScreen}
          options={{ headerShown: false }}
        />
        <Stack.Screen
          name="Details"
          component={DetailsScreen}
          options={{ headerShown: false }}
        />
      </Stack.Navigator>
    </NavigationContainer>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16,
    paddingTop: 50,
    backgroundColor: '#f0f0f0',
  },
  detailsContainer: {
    flex: 1,
    padding: 16,
    backgroundColor: '#f0f0f0',
  },
  centeredTitle: {
    fontSize: 30,
    fontWeight: 'bold',
    marginBottom: 16,
    fontFamily: 'Verdana',
    textAlign: 'center', // Center the title
  },
  historyTitle: {
    fontSize: 30,
    fontWeight: 'bold',
    marginBottom: 16,
    fontFamily: 'Verdana', // Change font to Verdana
    color: '#333',
    textAlign: 'center',
  },
  welcomeMessage: {
    fontSize: 20,
    fontWeight: 'bold',
    marginBottom: 16,
    color: '#333',
    fontFamily: 'Verdana',
    textAlign: 'center',
  },
  input: {
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    marginBottom: 12,
    paddingHorizontal: 8,
    fontFamily: 'Verdana',
  },
  timelineItem: {
    marginBottom: 5,
    //backgroundColor:"dodgerblue",
  },
  image: {
    width: '100%',
    height: 150,
    marginBottom: 7.5,
  },
  signOutButtonContainer: {
    alignSelf: 'flex-end',
    marginTop: 20,
    marginBottom: 8,
    padding: 10,
    backgroundColor: 'dodgerblue',
    borderRadius: 5,
    right: 10,
    bottom: 0,
  },
  signOutButtonText: {
    color: 'white',
    textWeight: 'bold',
    fontFamily: 'Verdana',
  },
  modalTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    marginBottom: 8,
    fontFamily: 'Verdana',
  },
  modalImage: {
    width: '100%',
    height: 150,
    marginBottom: 8,
  },
  modalDescription: {
    fontSize: 16,
    textAlign: 'center',
    marginBottom: 16,
    fontFamily: 'Verdana',
  },
  backButton: {
    marginTop: 20,
    marginBottom: 16,
    padding: 10,
    backgroundColor: 'dodgerblue',
    borderRadius: 5,
    alignSelf: 'flex-start',
  },
  backButtonText: {
    color: 'white',
    fontWeight: 'bold',
    fontFamily: 'Verdana',
  },
  signInButton: {
    backgroundColor: 'dodgerblue', // Blue background
    padding: 10,
    borderRadius: 5,
    alignItems: 'center',
  },
  signInButtonText: {
    color: 'white', // White text
    fontWeight: 'bold',
    fontFamily: 'Verdana',
  },
  erabutton: {
    flex: 1,
    backgroundColor: 'dodgerblue',
    borderRadius: 5,
    padding: 10,
    marginTop: 0,
    alignItems: 'center',
    marginBottom: 2.5,
  },
  erabuttontext: {
    color: 'white',
    fontWeight: 'bold',
    fontFamily: 'Verdana',
  },
  signUpButton: {
    marginTop: 10,
    padding: 10,
    backgroundColor: 'gray',
    borderRadius: 5,
    alignItems: 'center',
  },
  signUpButtonText: {
    color: 'white',
    fontWeight: 'bold',
    fontFamily: 'Verdana',
  },
});

export default App;
